name: Change Check

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  change-check:
    runs-on: ubuntu-latest
    steps:
    - name: Change Check
      uses: actions/checkout@v4.1.1

    - name: Setup PHP and install tools
      uses: shivammathur/setup-php@2.30.2
      with:
        php-version: '8.2'

    - name: Install PHPCS, Variable Analysis, SQLFluff
      run: |
        composer require --dev "squizlabs/php_codesniffer=*"
        composer config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer require --dev dealerdirect/phpcodesniffer-composer-installer
        composer require --dev sirbrillig/phpcs-variable-analysis
        pip install sqlfluff

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow

    - name: Determine if there is a previous commit
      run: |
        if git rev-parse HEAD^ > /dev/null 2>&1; then
          echo "HAS_PREVIOUS_COMMIT=true" >> $GITHUB_ENV
        else
          echo "HAS_PREVIOUS_COMMIT=false" >> $GITHUB_ENV
        fi

    - name: Find modified files in specified directories
      run: |
        if [ "$HAS_PREVIOUS_COMMIT" == "true" ]; then
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | tr '\n' ' ' || true)
          echo "CHANGED_FILES: $CHANGED_FILES"
          PHP_FILES=$(echo "$CHANGED_FILES" | grep -o -E 'var/www/sigge/.*\.php|var/lib/sigge/scripts/.*\.php|var/lib/sigge/plantillas_reportes/.*\.php|otros/.*\.php|sql/.*\.php' || true)
          SQL_FILES=$(echo "$CHANGED_FILES" | grep -o -E '.*\.sql$' || true)
          echo "PHP_FILES=$(echo $PHP_FILES | tr ' ' ',')" >> $GITHUB_ENV
          echo "SQL_FILES=$(echo $SQL_FILES | tr ' ' ',')" >> $GITHUB_ENV
          if [ -z "$PHP_FILES" ]; then
            echo "No PHP files have been modified."
          fi
          if [ -z "$SQL_FILES" ]; then
            echo "No SQL files have been modified."
          fi
        else
          echo "No previous commit to compare."
        fi

    - name: Run PHP Lint on modified PHP files
      if: env.PHP_FILES != ''
      run: |
        IFS=',' read -ra PHP_FILE_ARRAY <<< "$PHP_FILES"
        for php_file in "${PHP_FILE_ARRAY[@]}"; do
          php -l "$php_file"
        done

    - name: Run SQL Lint on modified SQL files
      if: env.SQL_FILES != ''
      run: |
        IFS=',' read -ra SQL_FILE_ARRAY <<< "$SQL_FILES"
        for sql_file in "${SQL_FILE_ARRAY[@]}"; do
          echo "Comprobando archivo: $sql_file"
          if [[ -f "$sql_file" && "$sql_file" == *.sql ]]; then
            sqlfluff lint --dialect postgres "$sql_file"
          else
            echo "El archivo $sql_file no existe o no es un archivo .sql."
          fi
        done
        
    - name: Run PHPCS on modified PHP files
      if: env.PHP_FILES != ''
      run: |
        ./vendor/bin/phpcs --standard=VariableAnalysis ${PHP_FILES//,/ }

    - name: No files modified
      if: env.PHP_FILES == '' && env.SQL_FILES == '' && env.HAS_PREVIOUS_COMMIT == 'true'
      run: echo "No PHP or SQL files have been modified."
